#!/bin/bash
#
# GNU General Public License
#
# DESCRIPTION:
#
#   Bash prompt features:
#    * displays the active python virtualenv
#    * displays the current branch of a git/mercurial repository
#    * displays the timestamp of a command
#    * displays the return value of the previous command
#    * displays newline after each command
#
# USAGE:
#
#   1. Save this file as ~/.bash_prompt
#   2. Add the following line to your ~/.bashrc:
#        . ~/.bash_prompt
#   3. Open a new terminal
#
# LINEAGE:
#
#   Based on work by woods and miki725
#


#################################
# Escape codes for color prompt #
#################################
        RED="\[\033[1;31m\]"
     YELLOW="\[\033[1;33m\]"
      GREEN="\[\033[1;32m\]"
       BLUE="\[\033[1;34m\]"
     PURPLE="\[\033[1;35m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[1;37m\]"
 COLOR_NONE="\[\e[0m\]"


##############################
# Color based on return code #
##############################
function set_prompt_symbol () {
  if test $1 -eq 0 ; then
      PROMPT_SYMBOL="${WHITE}\$${COLOR_NONE}"
  else
      PROMPT_SYMBOL="${LIGHT_RED}\$${COLOR_NONE}"
  fi
}


################################
# Display git/mercurial branch #
################################
function parse_git_branch(){
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

function parse_hg_branch(){
  hg branch 2> /dev/null | awk '{print " (" $1 ")"}'
}

# Determines the branch for this repository.
function set_git_branch() {
  # Get the name of the branch.
  branch=$(parse_git_branch)

  # if not git then check mercurial
  if [ "$branch" == "" ] ; then
    branch=$(parse_hg_branch)
  fi

  # Set the final branch string.
  BRANCH="${LIGHT_RED}${branch}${COLOR_NONE} "
}


#############################
# Display Python virtualenv #
#############################
function set_virtualenv () {
  if test -z "$VIRTUAL_ENV" ; then
      PYTHON_VIRTUALENV=""
  else
      PYTHON_VIRTUALENV="${LIGHT_RED}[`basename \"$VIRTUAL_ENV\"`]${COLOR_NONE} "
  fi
}


##############################
# Display prompt information #
##############################
function set_information () {
  USER_INFO="${GREEN}\u@\h ${YELLOW}(\@)${COLOR_NONE} "
}

function set_directory () {
  # Change \W to \w for full directory
  DIR_INFO="${BLUE}\W${COLOR_NONE}"
}


#########################
# Configure Bash prompt #
#########################
function set_bash_prompt () {
  # Set the PROMPT_SYMBOL variable
  # We do this first so we don't lose the return value of the last command.
  set_prompt_symbol $?

  # Set the PYTHON_VIRTUALENV variable
  set_virtualenv

  # Set the BRANCH variable
  set_git_branch

  # Set user, host, time
  set_information

  # Set current directory
  set_directory

  # Set the bash prompt variable
  PS1="\n${PYTHON_VIRTUALENV}${USER_INFO}${DIR_INFO}${BRANCH}${PROMPT_SYMBOL} "
}

# Execute this function just before bash displays its prompt
PROMPT_COMMAND=set_bash_prompt
