#!/bin/bash
#
# GNU General Public License
#
# DESCRIPTION:
#
#   Bash prompt features:
#    * displays the current branch of a git repository
#    * displays the timestamp of a command
#    * displays the return value of the previous command
#    * displays newline after each command
#

################################################################
# Color Escape Codes
################################################################
        RED="\[\033[1;31m\]"
     YELLOW="\[\033[1;33m\]"
      GREEN="\[\033[1;32m\]"
       BLUE="\[\033[1;34m\]"
     PURPLE="\[\033[1;35m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[1;37m\]"
 COLOR_NONE="\[\e[0m\]"


################################################################
# Return Code Color
################################################################
function set_prompt_symbol () {
  if test "$1" -eq 0 ; then
      PROMPT_SYMBOL="${WHITE}\$${COLOR_NONE}"
  else
      PROMPT_SYMBOL="${LIGHT_RED}\$${COLOR_NONE}"
  fi
}


################################################################
# Git / Mercurial branch
################################################################
function parse_git_branch () {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Determines the branch for this repository.
function set_git_branch () {
  # Get the name of the branch.
  branch=$(parse_git_branch)

  # Set the final branch string.
  BRANCH="${LIGHT_RED}${branch}${COLOR_NONE} "
}


################################################################
# General Prompt Information
################################################################
function set_information () {
  USER_INFO="${GREEN}\u@\h ${YELLOW}(\@)${COLOR_NONE} "
}

function set_directory () {
  # Change \W to \w for full directory
  DIR_INFO="${BLUE}\W${COLOR_NONE}"
}


################################################################
# Configure Bash Prompt
################################################################
function set_bash_prompt () {
  # Do this first so we don't lose the return value of the last command.
  set_prompt_symbol $?

  # Set the BRANCH variable.
  set_git_branch

  # Set user, host, time.
  set_information

  # Set current directory.
  set_directory

  # Set the bash prompt variable.
  PS1="\n${PYTHON_VIRTUALENV}${USER_INFO}${DIR_INFO}${BRANCH}${PROMPT_SYMBOL} "
}

# Execute this function before bash displays its default prompt.
PROMPT_COMMAND=set_bash_prompt
